{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction ChatInterfaceComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"div\", 11);\n    i0.ɵɵelementStart(2, \"div\", 12)(3, \"div\", 13);\n    i0.ɵɵtext(4, \"How can we help?\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 14);\n    i0.ɵɵtext(6, \"Custom GPT tool designed to give you more information about the Change Negotiations journey in Finland crafted by people with firsthand experience. We\\u2019re in this together.\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction ChatInterfaceComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"p\");\n    i0.ɵɵelementStart(3, \"div\", 16);\n    i0.ɵɵtext(4, \" Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed dictum tristique metus ac sollicitudin. Nulla facilisi. Fusce tristique sapien a vestibulum finibus. Aliquam erat volutpat. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Duis non lorem at justo congue convallis. Ut lobortis bibendum consequat. Sed ac massa ac sapien varius tincidunt.\\\" \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r6 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", message_r6, \" \");\n  }\n}\nfunction ChatInterfaceComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵlistener(\"click\", function ChatInterfaceComponent_div_8_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.sendQuestion(\"What are my rights during the layoff period?\"));\n    });\n    i0.ɵɵelementStart(1, \"div\", 18)(2, \"div\", 19);\n    i0.ɵɵtext(3, \"What are my rights\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 20);\n    i0.ɵɵtext(5, \"during the layoff period?\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction ChatInterfaceComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵlistener(\"click\", function ChatInterfaceComponent_div_9_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.sendQuestion(\"If I find a new job do I need to let my current employer know?\"));\n    });\n    i0.ɵɵelementStart(1, \"div\", 18)(2, \"div\", 19);\n    i0.ɵɵtext(3, \"If I find a new job\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 20);\n    i0.ɵɵtext(5, \"do I need to let my current employer know?\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction ChatInterfaceComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵlistener(\"click\", function ChatInterfaceComponent_div_11_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.sendQuestion(\"Can my employer fire me during layoff period?\"));\n    });\n    i0.ɵɵelementStart(1, \"div\", 18)(2, \"div\", 19);\n    i0.ɵɵtext(3, \"Can my employer fire me\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 20);\n    i0.ɵɵtext(5, \"during the layoff period?\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction ChatInterfaceComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵlistener(\"click\", function ChatInterfaceComponent_div_12_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.sendQuestion(\"Explain change negotiations as if  I\\u2019m a five year-old\"));\n    });\n    i0.ɵɵelementStart(1, \"div\", 18)(2, \"div\", 19);\n    i0.ɵɵtext(3, \"Explain Change Negotiations\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 20);\n    i0.ɵɵtext(5, \"as if I\\u2019m a 5-year old\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nexport class ChatInterfaceComponent {\n  constructor(http) {\n    this.http = http;\n    this.showChatGPT = true; // Initially show the ChatGPT-like section\n    this.userInput = ''; // Initialize or define userInput in your component\n    this.messages = []; // Array to store user messages\n  }\n  // Function to toggle to chat interface when the conversation starts\n  startChat() {\n    this.showChatGPT = false;\n    // Add any other logic related to starting the chat\n  }\n\n  sendUserInput(userInput) {\n    // Call the GPT API with user input¨\n    console.log(userInput);\n    this.showChatGPT = false;\n    this.userInput = userInput;\n    // this.http.post('YOUR_GPT_API_ENDPOINT', { message: userInput }).subscribe((response: any) => {\n    //   console.log(response); // Handle the response from the GPT API\n    //   // Display the response in the chat interface messages section\n    // });\n    this.sendUserMessage();\n  }\n  sendUserMessage() {\n    if (this.userInput.trim() !== '') {\n      this.messages.push(this.userInput); // Add user message to the array\n      // Optionally, you can perform any sending logic here if needed\n      this.userInput = ''; // Clear userInput after sending the message\n    }\n  }\n\n  sendQuestion(input) {\n    const question = input;\n    this.sendUserInput(question); // Call the method to send the question to the API\n  }\n\n  sendMessage() {\n    // Handle sending the user input\n    console.log(\"User input: \" + this.userInput);\n    // You can perform actions like sending the user input to the chat system, etc.\n  }\n  static #_ = this.ɵfac = function ChatInterfaceComponent_Factory(t) {\n    return new (t || ChatInterfaceComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChatInterfaceComponent,\n    selectors: [[\"app-chat-interface\"]],\n    decls: 14,\n    vars: 9,\n    consts: [[1, \"chat-wrapper\"], [\"class\", \"chat-gpt-container\", 4, \"ngIf\"], [1, \"messages\"], [\"class\", \"message\", 4, \"ngFor\", \"ngForOf\"], [1, \"chat-container\"], [1, \"input-box\"], [1, \"ready-made-questions\"], [1, \"row\"], [\"class\", \"question-box\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"text\", \"placeholder\", \"Message Change Negotiations GPT\", 1, \"text-input\", 3, \"ngModel\", \"ngModelChange\", \"keyup.enter\"], [1, \"chat-gpt-container\"], [1, \"chat-gpt-circle\"], [1, \"chat-gpt-text\"], [1, \"chat-gpt-title\"], [1, \"chat-gpt-subtitle\"], [1, \"message\"], [1, \"answer\"], [1, \"question-box\", 3, \"click\"], [1, \"question-content\"], [1, \"title\"], [1, \"subtitle\"]],\n    template: function ChatInterfaceComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, ChatInterfaceComponent_div_1_Template, 7, 0, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtemplate(3, ChatInterfaceComponent_div_3_Template, 5, 1, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"div\", 7);\n        i0.ɵɵtemplate(8, ChatInterfaceComponent_div_8_Template, 6, 0, \"div\", 8);\n        i0.ɵɵtemplate(9, ChatInterfaceComponent_div_9_Template, 6, 0, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 7);\n        i0.ɵɵtemplate(11, ChatInterfaceComponent_div_11_Template, 6, 0, \"div\", 8);\n        i0.ɵɵtemplate(12, ChatInterfaceComponent_div_12_Template, 6, 0, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function ChatInterfaceComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.userInput = $event;\n        })(\"keyup.enter\", function ChatInterfaceComponent_Template_input_keyup_enter_13_listener() {\n          return ctx.sendUserMessage();\n        });\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showChatGPT);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"fixed-chat\", !ctx.showChatGPT);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.showChatGPT);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showChatGPT);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showChatGPT);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.showChatGPT);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.userInput);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"@import url(https://fonts.googleapis.com/css2?family=Manrope:wght@300;400[_ngcontent-%COMP%];500[_ngcontent-%COMP%];600[_ngcontent-%COMP%];700&display=swap)[_ngcontent-%COMP%];body[_ngcontent-%COMP%] {\\n  \\n  display: flex;\\n  flex-direction: column;\\n  justify-content: space-between;\\n  min-height: 100vh;\\n  margin: 0;\\n}\\n\\n.chat-wrapper[_ngcontent-%COMP%] {\\n  width: 100%;\\n  max-width: 928px;\\n  margin: 0 auto;\\n  box-sizing: border-box;\\n  display: flex;\\n  flex-direction: column;\\n  position: relative;\\n}\\n\\n.chat-container[_ngcontent-%COMP%] {\\n  \\n  width: 100%;\\n  max-width: 928px;\\n  background: var(--color-light-pearl-gray, #F7F7F7);\\n  box-sizing: border-box;\\n  position: fixed; \\n  bottom: 0;\\n  z-index: 9998;\\n  \\n  \\n  background: var(--color-light-pearl-gray, #F7F7F7);\\n  font-family: \\\"Manrope\\\", sans-serif;\\n}\\n.chat-container[_ngcontent-%COMP%]   .input-box[_ngcontent-%COMP%] {\\n  \\n  flex-direction: column;\\n  align-items: center;\\n  margin-top: auto;\\n  font-family: \\\"Manrope\\\", sans-serif;\\n  bottom: 0px;\\n  bottom: 0;\\n  padding: 10px;\\n}\\n.chat-container[_ngcontent-%COMP%]   .input-box[_ngcontent-%COMP%]   .ready-made-questions[_ngcontent-%COMP%] {\\n  \\n  display: flex;\\n  flex-wrap: wrap;\\n  gap: 10px;\\n}\\n.chat-container[_ngcontent-%COMP%]   .input-box[_ngcontent-%COMP%]   .ready-made-questions[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 10px;\\n  width: 100%;\\n}\\n.chat-container[_ngcontent-%COMP%]   .input-box[_ngcontent-%COMP%]   .ready-made-questions[_ngcontent-%COMP%]   .question-box[_ngcontent-%COMP%] {\\n  \\n  width: 100%;\\n  max-width: calc(50% - 5px);\\n  border: 1px solid #A3A3A3;\\n  border-radius: 8px;\\n  background-color: #F2F2F2;\\n  padding: 24px 16px;\\n  display: flex;\\n  flex-direction: column;\\n  gap: 10px;\\n}\\n.chat-container[_ngcontent-%COMP%]   .input-box[_ngcontent-%COMP%]   .ready-made-questions[_ngcontent-%COMP%]   .question-box[_ngcontent-%COMP%]   .question-content[_ngcontent-%COMP%] {\\n  align-items: flex-start;\\n}\\n.chat-container[_ngcontent-%COMP%]   .input-box[_ngcontent-%COMP%]   .ready-made-questions[_ngcontent-%COMP%]   .question-box[_ngcontent-%COMP%]   .question-content[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%] {\\n  margin-bottom: 7px;\\n  color: var(--color-dark-700, #4D4D4D);\\n  \\n  font-family: \\\"Manrope\\\", sans-serif;\\n  font-size: 22px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: 32px; \\n  \\n}\\n.chat-container[_ngcontent-%COMP%]   .input-box[_ngcontent-%COMP%]   .ready-made-questions[_ngcontent-%COMP%]   .question-box[_ngcontent-%COMP%]   .question-content[_ngcontent-%COMP%]   .subtitle[_ngcontent-%COMP%] {\\n  color: var(--color-dark-700, #4D4D4D);\\n  \\n  font-family: \\\"Manrope\\\", sans-serif;\\n  font-size: 18px;\\n  font-style: normal;\\n  font-weight: 400;\\n  line-height: 24px; \\n  \\n}\\n.chat-container[_ngcontent-%COMP%]   .input-box[_ngcontent-%COMP%]   .text-input[_ngcontent-%COMP%] {\\n  \\n  width: 100%;\\n  padding: 10px;\\n  \\n}\\n\\n.messages[_ngcontent-%COMP%] {\\n  position: relative;\\n  margin-bottom: 100px;\\n  padding: 20px;\\n}\\n\\n.answer[_ngcontent-%COMP%] {\\n  text-align: right;\\n}\\n\\n.chat-gpt-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  flex-direction: column;\\n  position: relative; \\n  top: 20px;\\n  margin-bottom: 20%;\\n  max-width: 928px;\\n  left: 50%;\\n  transform: translateX(-50%);\\n  z-index: 9999;\\n}\\n\\n.chat-gpt-circle[_ngcontent-%COMP%] {\\n  \\n  width: 100px;\\n  height: 100px;\\n  background-color: #3e64ff; \\n  border-radius: 50%;\\n}\\n\\n.chat-gpt-text[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-top: 10px;\\n}\\n\\n.chat-gpt-title[_ngcontent-%COMP%] {\\n  color: var(--color-black-deep-black, #0A0A0A);\\n  \\n  font-family: \\\"Manrope\\\", sans-serif;\\n  font-size: 40px;\\n  font-style: normal;\\n  font-weight: 500;\\n  line-height: normal;\\n  margin: 20px;\\n}\\n\\n.chat-gpt-subtitle[_ngcontent-%COMP%] {\\n  color: var(--color-black-graphite-gray, #4D4D4D);\\n  text-align: center;\\n  \\n  font-family: \\\"Manrope\\\", sans-serif;\\n  font-size: 18px;\\n  font-style: normal;\\n  font-weight: 400;\\n  line-height: 24px; \\n  margin: 20px;\\n  \\n}\\n\\n\\n@media screen and (max-width: 750px), (max-height: 500px) {\\n  \\n  .chat-gpt-container[_ngcontent-%COMP%] {\\n    margin-bottom: 20%;\\n    position: relative;\\n  }\\n  .chat-container[_ngcontent-%COMP%] {\\n    position: relative;\\n  }\\n  .chat-container[_ngcontent-%COMP%]   .input-box[_ngcontent-%COMP%] {\\n    position: relative;\\n  }\\n}\\n@media screen and (max-width: 750px) and (max-width: 767px), (max-height: 500px) and (max-width: 767px) {\\n  .fixed-chat[_ngcontent-%COMP%] {\\n    \\n  }\\n}\\n@media (min-height: 1020px) {\\n  .chat-container[_ngcontent-%COMP%] {\\n    position: fixed;\\n  }\\n}\\n@media (max-width: 280px) {\\n  .chat-container[_ngcontent-%COMP%]   .question-box[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%] {\\n    font-size: 16px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","ChatInterfaceComponent","constructor","http","startChat","showChatGPT","sendUserInput","userInput","console","log","sendUserMessage","trim","messages","push","sendQuestion","input","question","sendMessage","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/hannuvalve/negotiations-gpt/src/app/chat-interface/chat-interface.component.html","/Users/hannuvalve/negotiations-gpt/src/app/chat-interface/chat-interface.component.ts"],"sourcesContent":["<div class=\"chat-wrapper\">\n\n  <div class=\"chat-gpt-container\" *ngIf=\"showChatGPT\">\n    <div class=\"chat-gpt-circle\">\n      <!-- Your circular icon content goes here -->\n    </div>\n    <div class=\"chat-gpt-text\">\n      <div class=\"chat-gpt-title\">How can we help?</div>\n      <div class=\"chat-gpt-subtitle\">Custom GPT tool designed to give you more information about the Change Negotiations journey in Finland crafted by people with firsthand experience. We’re in this together.</div>\n    </div>\n  </div>\n  <!-- <div class=\"messages\" *ngIf=\"!showChatGPT\" >\n    {{this.userInput}}\n  </div> -->\n  <div class=\"messages\">\n    <div class=\"message\" *ngFor=\"let message of messages\">\n      {{ message }}\n      <p></p>\n      <div class=\"answer\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed dictum tristique metus ac sollicitudin. Nulla facilisi. Fusce tristique sapien a vestibulum finibus. Aliquam erat volutpat. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Duis non lorem at justo congue convallis. Ut lobortis bibendum consequat. Sed ac massa ac sapien varius tincidunt.\"\n      </div>\n    </div>\n  </div>\n  <div class=\"chat-container\" [class.fixed-chat]=\"!showChatGPT\">\n\n    <!-- Chat content -->\n    <div class=\"input-box\">\n      <div class=\"ready-made-questions\">\n        <div class=\"row\">\n          <div class=\"question-box\" *ngIf=\"showChatGPT\" (click)=\"sendQuestion('What are my rights during the layoff period?')\">\n            <div class=\"question-content\">\n              <div class=\"title\">What are my rights</div>\n              <div class=\"subtitle\">during the layoff period?</div>\n            </div>\n          </div>\n          <div class=\"question-box\" *ngIf=\"showChatGPT\" (click)=\"sendQuestion('If I find a new job do I need to let my current employer know?')\">\n            <div class=\"question-content\">\n              <div class=\"title\">If I find a new job</div>\n              <div class=\"subtitle\">do I need to let my current employer know?</div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"question-box\" *ngIf=\"showChatGPT\" (click)=\"sendQuestion('Can my employer fire me during layoff period?')\">\n            <div class=\"question-content\">\n              <div class=\"title\">Can my employer fire me</div>\n              <div class=\"subtitle\">during the layoff period?</div>\n            </div>\n          </div>\n          <div class=\"question-box\" *ngIf=\"showChatGPT\" (click)=\"sendQuestion('Explain change negotiations as if  I’m a five year-old')\">\n            <div class=\"question-content\">\n              <div class=\"title\">Explain Change Negotiations</div>\n              <div class=\"subtitle\">as if I’m a 5-year old</div>\n            </div>\n          </div>\n        </div> \n          <input type=\"text\" class=\"text-input\" placeholder=\"Message Change Negotiations GPT\" [(ngModel)]=\"userInput\" (keyup.enter)=\"sendUserMessage()\">\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-chat-interface',\n  templateUrl: './chat-interface.component.html',\n  styleUrls: ['./chat-interface.component.scss']\n})\nexport class ChatInterfaceComponent {\n  showChatGPT: boolean = true; // Initially show the ChatGPT-like section\n  userInput: string = ''; // Initialize or define userInput in your component\n  messages: string[] = []; // Array to store user messages\n  \n  \n  constructor(private http: HttpClient) {}\n // Function to toggle to chat interface when the conversation starts\n  startChat() {\n  this.showChatGPT = false;\n  // Add any other logic related to starting the chat\n  }\n  sendUserInput(userInput: string) {\n    // Call the GPT API with user input¨\n    console.log(userInput);\n    this.showChatGPT = false;\n    this.userInput = userInput;\n    // this.http.post('YOUR_GPT_API_ENDPOINT', { message: userInput }).subscribe((response: any) => {\n    //   console.log(response); // Handle the response from the GPT API\n    //   // Display the response in the chat interface messages section\n    // });\n    this.sendUserMessage()\n  }\n  sendUserMessage() {\n    if (this.userInput.trim() !== '') {\n      this.messages.push(this.userInput); // Add user message to the array\n      // Optionally, you can perform any sending logic here if needed\n      this.userInput = ''; // Clear userInput after sending the message\n    }\n  }\n  sendQuestion(input: string) {\n    const question = input;\n    this.sendUserInput(question); // Call the method to send the question to the API\n  }\n  sendMessage() {\n    // Handle sending the user input\n    console.log(\"User input: \" + this.userInput);\n    // You can perform actions like sending the user input to the chat system, etc.\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}