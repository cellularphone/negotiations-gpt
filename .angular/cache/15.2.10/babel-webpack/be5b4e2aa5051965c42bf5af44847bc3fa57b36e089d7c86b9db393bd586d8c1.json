{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ChatInterfaceComponent {\n  constructor(http) {\n    this.http = http;\n    this.showChatGPT = true; // Initially show the ChatGPT-like section\n    this.preMadeQuestions = [{\n      title: 'What are my rights',\n      subtitle: 'during the layoff period?'\n    }, {\n      title: 'If I find a new job',\n      subtitle: 'do I need to let my current employer know?'\n    }, {\n      title: 'Can my employer fire me',\n      subtitle: 'during the layoff period?'\n    }, {\n      title: 'Explain Change Negotiations',\n      subtitle: 'as if I’m a 5-year old'\n    }];\n  }\n  // Function to toggle to chat interface when the conversation starts\n  startChat() {\n    this.showChatGPT = false;\n    // Add any other logic related to starting the chat\n  }\n\n  sendUserInput(userInput) {\n    // Call the GPT API with user input¨\n    console.log(userInput);\n    this.showChatGPT = false;\n    this.userInput = userInput;\n    // this.http.post('YOUR_GPT_API_ENDPOINT', { message: userInput }).subscribe((response: any) => {\n    //   console.log(response); // Handle the response from the GPT API\n    //   // Display the response in the chat interface messages section\n    // });\n  }\n\n  sendQuestion(question) {\n    console.log(question);\n    this.sendUserInput(question); // Call the method to send the question to the API\n  }\n  static #_ = this.ɵfac = function ChatInterfaceComponent_Factory(t) {\n    return new (t || ChatInterfaceComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChatInterfaceComponent,\n    selectors: [[\"app-chat-interface\"]],\n    decls: 14,\n    vars: 0,\n    consts: [[1, \"container\", \"d-flex\", \"flex-column\", \"align-items-center\", \"justify-content-center\", 2, \"height\", \"100vh\"], [1, \"chat-gpt-circle\", \"bg-primary\", \"text-white\", \"d-flex\", \"align-items-center\", \"justify-content-center\", \"rounded-circle\", \"mb-3\"], [2, \"font-size\", \"36px\"], [1, \"card-title\"], [1, \"card-text\"], [1, \"fixed-bottom\", \"p-3\"], [1, \"input-group\"], [\"type\", \"text\", \"placeholder\", \"Search pre-made questions...\", 1, \"form-control\"], [1, \"input-group-append\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\"]],\n    template: function ChatInterfaceComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"span\", 2);\n        i0.ɵɵtext(3, \"GPT\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"h2\", 3);\n        i0.ɵɵtext(5, \"Change Negotiations GPT\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"p\", 4);\n        i0.ɵɵtext(7, \"Custom GPT tool designed to give you more information about the Change Negotiations journey in Finland crafted by people with firsthand experience. We\\u2019re in this together.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 6);\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵelementStart(11, \"div\", 8)(12, \"button\", 9);\n        i0.ɵɵtext(13, \"Search\");\n        i0.ɵɵelementEnd()()()();\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,sBAAsB;EAWjCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAVxB,gBAAW,GAAY,IAAI,CAAC,CAAC;IAE7B,qBAAgB,GAAG,CACjB;MAAEC,KAAK,EAAE,oBAAoB;MAAEC,QAAQ,EAAE;IAA2B,CAAE,EACtE;MAAED,KAAK,EAAE,qBAAqB;MAAEC,QAAQ,EAAE;IAA4C,CAAE,EACxF;MAAED,KAAK,EAAE,yBAAyB;MAAEC,QAAQ,EAAE;IAA2B,CAAE,EAC3E;MAAED,KAAK,EAAE,6BAA6B;MAAEC,QAAQ,EAAE;IAAwB,CAAE,CAC7E;EAGsC;EACxC;EACCC,SAAS;IACT,IAAI,CAACC,WAAW,GAAG,KAAK;IACxB;EACA;;EACAC,aAAa,CAACC,SAAiB;IAC7B;IACAC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;IACtB,IAAI,CAACF,WAAW,GAAG,KAAK;IACxB,IAAI,CAACE,SAAS,GAAGA,SAAS;IAC1B;IACA;IACA;IACA;EACF;;EAEAG,YAAY,CAACC,QAAa;IACxBH,OAAO,CAACC,GAAG,CAACE,QAAQ,CAAC;IAErB,IAAI,CAACL,aAAa,CAACK,QAAQ,CAAC,CAAC,CAAC;EAChC;EAAC;qBAhCUZ,sBAAsB;EAAA;EAAA;UAAtBA,sBAAsB;IAAAa;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCRnCC,8BAA2G;QAGtEA,mBAAG;QAAAA,iBAAO;QAE7CA,6BAAuB;QAAAA,uCAAuB;QAAAA,iBAAK;QACnDA,4BAAqB;QAAAA,gMAA2K;QAAAA,iBAAI;QAGtMA,8BAA8B;QAExBA,4BAAmF;QACnFA,+BAAgC;QAC4BA,uBAAM;QAAAA,iBAAS","names":["ChatInterfaceComponent","constructor","http","title","subtitle","startChat","showChatGPT","sendUserInput","userInput","console","log","sendQuestion","question","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/hannuvalve/negotiations-gpt/src/app/chat-interface/chat-interface.component.ts","/Users/hannuvalve/negotiations-gpt/src/app/chat-interface/chat-interface.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-chat-interface',\n  templateUrl: './chat-interface.component.html',\n  styleUrls: ['./chat-interface.component.scss']\n})\nexport class ChatInterfaceComponent {\n  showChatGPT: boolean = true; // Initially show the ChatGPT-like section\n  userInput: string | undefined;\n  preMadeQuestions = [\n    { title: 'What are my rights', subtitle: 'during the layoff period?' },\n    { title: 'If I find a new job', subtitle: 'do I need to let my current employer know?' },\n    { title: 'Can my employer fire me', subtitle: 'during the layoff period?' },\n    { title: 'Explain Change Negotiations', subtitle: 'as if I’m a 5-year old' }\n  ];\n\n  \n  constructor(private http: HttpClient) {}\n // Function to toggle to chat interface when the conversation starts\n  startChat() {\n  this.showChatGPT = false;\n  // Add any other logic related to starting the chat\n  }\n  sendUserInput(userInput: string) {\n    // Call the GPT API with user input¨\n    console.log(userInput);\n    this.showChatGPT = false;\n    this.userInput = userInput;\n    // this.http.post('YOUR_GPT_API_ENDPOINT', { message: userInput }).subscribe((response: any) => {\n    //   console.log(response); // Handle the response from the GPT API\n    //   // Display the response in the chat interface messages section\n    // });\n  }\n\n  sendQuestion(question: any) {\n    console.log(question);\n    \n    this.sendUserInput(question); // Call the method to send the question to the API\n  }\n\n}\n","<div class=\"container d-flex flex-column align-items-center justify-content-center\" style=\"height: 100vh;\">\n  <div class=\"chat-gpt-circle bg-primary text-white d-flex align-items-center justify-content-center rounded-circle mb-3\">\n      <!-- Your circular icon content goes here -->\n      <span style=\"font-size: 36px;\">GPT</span>\n  </div>\n  <h2 class=\"card-title\">Change Negotiations GPT</h2>\n  <p class=\"card-text\">Custom GPT tool designed to give you more information about the Change Negotiations journey in Finland crafted by people with firsthand experience. We’re in this together.</p>\n</div>\n\n<div class=\"fixed-bottom p-3\">\n  <div class=\"input-group\">\n      <input type=\"text\" class=\"form-control\" placeholder=\"Search pre-made questions...\">\n      <div class=\"input-group-append\">\n          <button class=\"btn btn-outline-secondary\" type=\"button\">Search</button>\n      </div>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}