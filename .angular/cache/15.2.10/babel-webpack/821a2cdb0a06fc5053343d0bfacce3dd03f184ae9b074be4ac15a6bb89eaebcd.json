{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ChatInterfaceComponent = class ChatInterfaceComponent {\n  constructor(http) {\n    this.http = http;\n    this.showChatGPT = true; // Initially show the ChatGPT-like section\n  }\n  // Function to toggle to chat interface when the conversation starts\n  startChat() {\n    this.showChatGPT = false;\n    // Add any other logic related to starting the chat\n  }\n\n  sendUserInput(userInput) {\n    // Call the GPT API with user input¨\n    console.log(userInput);\n    this.showChatGPT = false;\n    this.userInput = userInput;\n    // this.http.post('YOUR_GPT_API_ENDPOINT', { message: userInput }).subscribe((response: any) => {\n    //   console.log(response); // Handle the response from the GPT API\n    //   // Display the response in the chat interface messages section\n    // });\n  }\n\n  sendQuestion(input) {\n    const question = input;\n    this.sendUserInput(question); // Call the method to send the question to the API\n  }\n};\n\nChatInterfaceComponent = __decorate([Component({\n  selector: 'app-chat-interface',\n  templateUrl: './chat-interface.component.html',\n  styleUrls: ['./chat-interface.component.scss']\n})], ChatInterfaceComponent);\nexport { ChatInterfaceComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAQlC,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAKjCC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJxB,gBAAW,GAAY,IAAI,CAAC,CAAC;EAIU;EACxC;EACCC,SAAS;IACT,IAAI,CAACC,WAAW,GAAG,KAAK;IACxB;EACA;;EACAC,aAAa,CAACC,SAAiB;IAC7B;IACAC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;IACtB,IAAI,CAACF,WAAW,GAAG,KAAK;IACxB,IAAI,CAACE,SAAS,GAAGA,SAAS;IAC1B;IACA;IACA;IACA;EACF;;EAEAG,YAAY,CAACC,KAAa;IACxB,MAAMC,QAAQ,GAAGD,KAAK;IACtB,IAAI,CAACL,aAAa,CAACM,QAAQ,CAAC,CAAC,CAAC;EAChC;CAED;;AA3BYX,sBAAsB,eALlCD,SAAS,CAAC;EACTa,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,GACWd,sBAAsB,CA2BlC;SA3BYA,sBAAsB","names":["Component","ChatInterfaceComponent","constructor","http","startChat","showChatGPT","sendUserInput","userInput","console","log","sendQuestion","input","question","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/hannuvalve/negotiations-gpt/src/app/chat-interface/chat-interface.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-chat-interface',\n  templateUrl: './chat-interface.component.html',\n  styleUrls: ['./chat-interface.component.scss']\n})\nexport class ChatInterfaceComponent {\n  showChatGPT: boolean = true; // Initially show the ChatGPT-like section\n  userInput: string | undefined;\n \n  \n  constructor(private http: HttpClient) {}\n // Function to toggle to chat interface when the conversation starts\n  startChat() {\n  this.showChatGPT = false;\n  // Add any other logic related to starting the chat\n  }\n  sendUserInput(userInput: string) {\n    // Call the GPT API with user input¨\n    console.log(userInput);\n    this.showChatGPT = false;\n    this.userInput = userInput;\n    // this.http.post('YOUR_GPT_API_ENDPOINT', { message: userInput }).subscribe((response: any) => {\n    //   console.log(response); // Handle the response from the GPT API\n    //   // Display the response in the chat interface messages section\n    // });\n  }\n\n  sendQuestion(input: string) {\n    const question = input;\n    this.sendUserInput(question); // Call the method to send the question to the API\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}